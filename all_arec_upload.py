import pandas as pd
import pyodbc
import numpy as np
import os
from getpass import getuser, getpass
import re

# Packages necessary for pd.to_sql() functionality
import sqlalchemy, urllib

# Income Statement Function Import
from IS_function import income_statement

# SAP DB Filter Import
from sap_db_filter import sap_db_query, chart_of_accounts, create_connection

# ---------------------------------------------------------------------------------------------------

user = "1217543"

# Traditional SQL Connection protocol - this is still necessary
base_con = (
    "Driver={{ODBC DRIVER 17 for SQL Server}};"
    "Server=OPSReport02.uhaul.amerco.org;"
    "Database=DEVTEST;"
    "UID={};"
    "PWD={};"
).format(user, os.environ.get("sql_pwd"))
con = pyodbc.connect(base_con)

# URLLib finds the important information from our base connection
params = urllib.parse.quote_plus(base_con)

# SQLAlchemy takes all this info to create the engine
engine = sqlalchemy.create_engine("mssql+pyodbc:///?odbc_connect=%s" % params)

# ---------------------------------------------------------------------------------------------------------------------

# ----------------------------------
# All Center Income Statement Upload
# ----------------------------------
# Profit Center List ----
entity_info_con = create_connection(database="FINANALYSIS")
graph_index_query = "SELECT * FROM [FINANALYSIS].[dbo].[GRAPH_INDEX_MATCH]"
graph_entity_info_query = "SELECT * FROM [FINANALYSIS].[dbo].[GRAPH_ENTITY_INFO]"

# Import Graph Entity List ----
index_match_db = pd.read_sql_query(graph_index_query, entity_info_con)
entity_info_db = pd.read_sql_query(graph_entity_info_query, entity_info_con)
entity_info_con.close()

# Import Owner to Entity Info ----
graph_entity_list = pd.merge(
    left=entity_info_db,
    right=index_match_db.loc[
        :, ["MEntity", "Simple Owner", "SAC or Galaxy or PMSR", "Owned"]
    ],
    how="left",
    on="MEntity",
)

graph_entity_list.rename(columns={"Cost Center": "Profit_Center"}, inplace=True)
"""
Unique "Simple Owner" within the graph file includes:
1) UHI: 1577
2) SAC: 425
3) Mercury: 78
4) Galaxy: 16
5) DLR: 1
6) Closed: 34
7) None
For AREC, we are interested in UHI Centers
"""

# Extract UHI Centers ----
arec_mask = graph_entity_list["Simple Owner"] == "UHI"
arec_entity = graph_entity_list[arec_mask]
arec_pc = arec_entity["Profit_Center"].unique()
arec_pc = arec_pc[arec_pc != None]
arec_pc = arec_pc[arec_pc != "0"]

# Compile Individual Income Statement DF ----
arec_pc_list = list(arec_pc)

# Filter SAP DB for relevant profit centers ----
sap_db = sap_db_query(arec_pc_list, 2019)

# Determine whethere all Profit Centers are present within SAP DB ----
profit_center_mask = np.isin(arec_pc, sap_db["Profit_Center"].unique())
arec_pc_list = list(arec_pc[profit_center_mask])

is_container = map(
    lambda x: income_statement(
        profit_center=x, sap_data=sap_db, line_item_dict=chart_of_accounts
    ),
    arec_pc_list,
)

arec_income_statement_list = [n for n in list(is_container)]

# Dictionary Containing all Income Statements ----
income_statement_dict = dict(zip(arec_pc_list, arec_income_statement_list))

# Concatenate into a single data frame for SQL upload ----
aggregate_df = pd.concat(income_statement_dict)

# # Upload To SQL ----
# aggregate_df.to_sql('Center_IS', engine, index=False, if_exists='append')


# """
# Jason's Same Store Aggregation
# """
#
# # Create filter for Jason's Same Store Properties ----
# same_store_mask = ['7000008886',
# '7000008951',
# '7000006820',
# '7000007416',
# '7000009282',
# '7000007954',
# '7000006233',
# '7000007377',
# '7000007977',
# '7000007201',
# '7000007415',
# '7000008661',
# '7000008502',
# '7000008708',
# '7000008835',
# '7000008980',
# '7000009146',
# '7000008889',
# '7000007419',
# '7000009353',
# '7000008981',
# '7000007084',
# '7000006548',
# '7000006826',
# '7000006829',
# '7000008890',
# '7000006811',
# '7000006238',
# '7000006825',
# '7000008804',
# '7000007420',
# '7000008362',
# '7000007182',
# '7000006232',
# '7000006494',
# '7000007800',
# '7000005897',
# '7000006413',
# '7000006903',
# '7000008868',
# '7000005844',
# '7000005868',
# '7000005889',
# '7000008665',
# '7000006235',
# '7000006236',
# '7000006172',
# '7000006159',
# '7000006379',
# '7000006397',
# '7000006622',
# '7000008801',
# '7000008802',
# '7000006704',
# '7000006723',
# '7000006752',
# '7000006727',
# '7000006729',
# '7000006772',
# '7000006552',
# '7000007156',
# '7000006800',
# '7000006810',
# '7000006937',
# '7000007451',
# '7000007827',
# '7000007830',
# '7000007657',
# '7000007176',
# '7000007181',
# '7000007198',
# '7000007740',
# '7000007560',
# '7000007803',
# '7000007804',
# '7000008019',
# '7000008116',
# '7000008123',
# '7000008161',
# '7000008519',
# '7000008193',
# '7000008700',
# '7000008705',
# '7000008706',
# '7000008710',
# '7000008711',
# '7000009029',
# '7000008176',
# '7000009084',
# '7000008888',
# '7000007974',
# '7000007979',
# '7000005840',
# '7000005846',
# '7000005848',
# '7000006904',
# '7000006906',
# '7000006907',
# '7000006910',
# '7000007378',
# '7000007359',
# '7000007021',
# '7000007367',
# '7000007027',
# '7000007882',
# '7000007883',
# '7000008313',
# '7000007888',
# '7000007294',
# '7000007296',
# '7000008858',
# '7000008860',
# '7000007305',
# '7000008870',
# '7000007539',
# '7000007541',
# '7000007542',
# '7000007956',
# '7000009165',
# '7000008077',
# '7000009168',
# '7000009169',
# '7000008090',
# '7000008094',
# '7000008095',
# '7000006886',
# '7000008410',
# '7000008413',
# '7000009099',
# '7000008345',
# '7000008347',
# '7000008348',
# '7000008351',
# '7000009004',
# '7000009005',
# '7000007912',
# '7000009298',
# '7000009312',
# '7000009299',
# '7000009300',
# '7000008556',
# '7000008563',
# '7000007133',
# '7000006120',
# '7000006122',
# '7000006125',
# '7000006128',
# '7000006129',
# '7000006127',
# '7000007136',
# '7000007431',
# '7000007432',
# '7000007438',
# '7000008977',
# '7000008517',
# '7000007781',
# '7000007784',
# '7000007471',
# '7000008838',
# '7000008243',
# '7000008250',
# '7000008252',
# '7000008254',
# '7000008975',
# '7000006353',
# '7000006355',
# '7000006356',
# '7000006390',
# '7000008684',
# '7000008491',
# '7000008504',
# '7000008505',
# '7000008506',
# '7000006255',
# '7000007957',
# '7000007515',
# '7000007928',
# '7000008186',
# '7000008291',
# '7000007973',
# '7000007083',
# '7000006269',
# '7000007360',
# '7000009664',
# '7000009513',
# '7000009771',
# '7000005847',
# '7000008557',
# '7000009344',
# '7000009346',
# '7000007365',
# '7000007368',
# '7000007361',
# '7000008605',
# '7000008226',
# '7000006218',
# '7000009533',
# '7000006490',
# '7000006414',
# '7000007614',
# '7000008167',
# '7000005818',
# '7000005821',
# '7000005822',
# '7000005825',
# '7000008898',
# '7000005864',
# '7000005865',
# '7000005867',
# '7000005869',
# '7000005870',
# '7000005871',
# '7000008902',
# '7000005895',
# '7000005896',
# '7000005898',
# '7000005899',
# '7000005902',
# '7000006431',
# '7000006454',
# '7000006474',
# '7000006157',
# '7000006285',
# '7000006304',
# '7000006305',
# '7000006307',
# '7000006308',
# '7000006323',
# '7000006324',
# '7000006371',
# '7000006374',
# '7000006377',
# '7000006378',
# '7000006394',
# '7000006395',
# '7000006399',
# '7000006191',
# '7000006192',
# '7000006785',
# '7000006790',
# '7000006197',
# '7000006214',
# '7000006215',
# '7000006217',
# '7000008899',
# '7000008900',
# '7000008901',
# '7000006254',
# '7000006621',
# '7000006650',
# '7000006674',
# '7000006681',
# '7000006683',
# '7000006750',
# '7000006753',
# '7000006754',
# '7000006766',
# '7000006767',
# '7000006768',
# '7000006771',
# '7000006513',
# '7000006514',
# '7000006526',
# '7000006527',
# '7000006528',
# '7000006550',
# '7000006551',
# '7000006565',
# '7000006573',
# '7000006576',
# '7000007102',
# '7000007104',
# '7000007111',
# '7000007151',
# '7000007153',
# '7000007155',
# '7000007157',
# '7000006824',
# '7000006956',
# '7000006979',
# '7000006980',
# '7000006994',
# '7000006995',
# '7000007020',
# '7000007022',
# '7000007029',
# '7000007071',
# '7000007075',
# '7000007076',
# '7000007077',
# '7000007081',
# '7000006879',
# '7000006880',
# '7000006881',
# '7000006883',
# '7000006884',
# '7000006933',
# '7000006934',
# '7000006936',
# '7000007266',
# '7000007269',
# '7000007274',
# '7000007275',
# '7000007276',
# '7000007277',
# '7000007278',
# '7000007280',
# '7000007338',
# '7000007341',
# '7000007343',
# '7000007344',
# '7000007346',
# '7000007387',
# '7000007396',
# '7000007454',
# '7000007456',
# '7000007218',
# '7000007219',
# '7000007220',
# '7000007223',
# '7000007227',
# '7000007228',
# '7000007240',
# '7000007241',
# '7000007242',
# '7000007243',
# '7000007244',
# '7000007245',
# '7000007246',
# '7000007248',
# '7000007257',
# '7000007764',
# '7000007766',
# '7000007768',
# '7000007823',
# '7000007828',
# '7000007832',
# '7000007491',
# '7000007492',
# '7000007493',
# '7000007494',
# '7000007498',
# '7000007507',
# '7000007511',
# '7000007512',
# '7000007513',
# '7000007627',
# '7000007631',
# '7000007633',
# '7000007634',
# '7000007656',
# '7000007658',
# '7000007681',
# '7000007682',
# '7000007683',
# '7000007686',
# '7000007687',
# '7000007711',
# '7000007712',
# '7000007713',
# '7000007716',
# '7000007738',
# '7000007743',
# '7000007554',
# '7000007556',
# '7000007581',
# '7000007584',
# '7000007585',
# '7000007586',
# '7000007610',
# '7000007611',
# '7000007612',
# '7000008144',
# '7000007997',
# '7000008000',
# '7000008001',
# '7000008002',
# '7000008003',
# '7000008017',
# '7000008024',
# '7000008046',
# '7000008071',
# '7000008072',
# '7000007319',
# '7000008075',
# '7000007325',
# '7000008078',
# '7000008119',
# '7000008120',
# '7000008162',
# '7000008163',
# '7000008166',
# '7000007858',
# '7000007861',
# '7000007862',
# '7000007929',
# '7000007933',
# '7000007934',
# '7000007935',
# '7000007936',
# '7000008468',
# '7000008469',
# '7000008470',
# '7000008474',
# '7000008477',
# '7000008187',
# '7000008188',
# '7000008189',
# '7000008195',
# '7000008197',
# '7000008199',
# '7000008305',
# '7000008306',
# '7000008308',
# '7000008309',
# '7000008312',
# '7000008364',
# '7000008367',
# '7000008381',
# '7000008382',
# '7000008385',
# '7000008389',
# '7000008390',
# '7000008391',
# '7000008218',
# '7000008220',
# '7000008224',
# '7000008225',
# '7000008227',
# '7000008228',
# '7000008229',
# '7000008269',
# '7000008272',
# '7000008274',
# '7000008276',
# '7000008277',
# '7000008279',
# '7000008294',
# '7000008295',
# '7000008296',
# '7000008297',
# '7000008299',
# '7000008611',
# '7000008612',
# '7000008645',
# '7000008647',
# '7000008721',
# '7000008786',
# '7000008787',
# '7000008788',
# '7000008789',
# '7000008578',
# '7000008592',
# '7000008606',
# '7000009116',
# '7000009128',
# '7000009132',
# '7000009182',
# '7000009184',
# '7000009185',
# '7000009026',
# '7000009028',
# '7000009051',
# '7000009052',
# '7000009053',
# '7000009059',
# '7000009080',
# '7000009081',
# '7000009083',
# '7000009334',
# '7000009335',
# '7000009336',
# '7000008950',
# '7000008968',
# '7000009277',
# '7000008952',
# '7000009425',
# '7000009818',
# '7000006976',
# '7000006999',
# '7000009608',
# '7000007272',
# '7000008607',
# '7000007714',
# '7000009345',
# '7000008682',
# '7000008448',
# '7000008769',
# '7000007363',
# '7000008340',
# '7000009259',
# '7000009939',
# '7000009521',
# '7000009517',
# '7000009163',
# '7000009254',
# '7000009760',
# '7000009200',
# '7000007761',
# '7000009650',
# '7000007677',
# '7000009804',
# '7000009807',
# '7000009817',
# '7000009497',
# '7000009498',
# '7000009645',
# '7000009659',
# '7000006747',
# '7000007819',
# '7000006698',
# '7000007196',
# '7000009506',
# '7000005841',
# '7000009525',
# '7000009508',
# '7000006365',
# '7000009522',
# '7000009523',
# '7000009524',
# '7000007762',
# '7000007332',
# '7000009526',
# '7000009527',
# '7000009201',
# '7000009202',
# '7000008140',
# '7000009528',
# '7000009529',
# '7000007760',
# '7000007016',
# '7000009534',
# '7000009535',
# '7000009502',
# '7000008973',
# '7000008406',
# '7000008407',
# '7000008408',
# '7000009512',
# '7000008991',
# '7000009514',
# '7000007302',
# '7000007334',
# '7000006972',
# '7000008242',
# '7000009519',
# '7000009619',
# '7000009815',
# '7000009499',
# '7000006190',
# '7000006411',
# '7000008111',
# '7000009494',
# '7000009772',
# '7000009240',
# '7000009217',
# '7000009257',
# '7000009776',
# '7000008461',
# '7000009775',
# '7000008662',
# '7000009774',
# '7000008699',
# '7000005894',
# '7000008646',
# '7000008409',
# '7000009797',
# '7000009800',
# '7000009509',
# '7000010323',
# '7000010316',
# '7000010367',
# '7000010540',
# '7000010440',
# '7000010424',
# '7000010511',
# '7000010576',
# '7000010577',
# '7000010595',
# '7000010589',
# '7000010620',
# '7000010632',
# '7000010648',
# '7000010670',
# '7000010665',
# '7000010690',
# '7000010675',
# '7000010741',
# '7000010742',
# '7000010761',
# '7000010752',
# '7000010771',
# '7000010790',
# '7000010848',
# '7000010804',
# '7000010851',
# '7000010875',
# '7000011020',
# '7000011031',
# '7000011032',
# '7000011037',
# '7000011044',
# '7000011099',
# '7000011103',
# '7000011152',
# '7000011161',
# '7000011206',
# '7000011352',
# '7000011386',
# '7000011481',
# '7000011676']
# same_store_df = aggregate_df[aggregate_df.profit_center.isin(same_store_mask)]
#
# # Aggregate by line item ----
# agg_same_store = same_store_df.groupby(['date', 'line_item']).value.sum()
# final_same_store = agg_same_store.reset_index()
#
# # Export to CSV ----
# final_same_store.to_csv(r'Z:\group\MIA\Noe\Projects\Jasons Same Store\python_is_aggregate.csv', index=False)
#
